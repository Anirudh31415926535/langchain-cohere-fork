interactions:
- request:
    body: ''
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      host:
      - api.cohere.com
      user-agent:
      - python-httpx/0.27.0
      x-client-name:
      - langchain:partner
      x-fern-language:
      - Python
      x-fern-sdk-name:
      - cohere
      x-fern-sdk-version:
      - 5.5.8
    method: GET
    uri: https://api.cohere.com/v1/models?default_only=true&endpoint=chat
  response:
    body:
      string: '{"models":[{"name":"command-r-plus","endpoints":["generate","chat","summarize"],"finetuned":false,"context_length":128000,"tokenizer_url":"https://storage.googleapis.com/cohere-public/tokenizers/command-r-plus.json","default_endpoints":["chat"]}]}'
    headers:
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Content-Length:
      - '247'
      Via:
      - 1.1 google
      access-control-expose-headers:
      - X-Debug-Trace-ID
      cache-control:
      - no-cache, no-store, no-transform, must-revalidate, private, max-age=0
      content-type:
      - application/json
      date:
      - Thu, 25 Jul 2024 07:35:25 GMT
      expires:
      - Thu, 01 Jan 1970 00:00:00 UTC
      pragma:
      - no-cache
      server:
      - envoy
      vary:
      - Origin
      x-accel-expires:
      - '0'
      x-debug-trace-id:
      - c0ca9d55ae2b1dbcd6e2e8567ab54fc2
      x-endpoint-monthly-call-limit:
      - '1000'
      x-envoy-upstream-service-time:
      - '18'
      x-trial-endpoint-call-limit:
      - '40'
      x-trial-endpoint-call-remaining:
      - '38'
    status:
      code: 200
      message: OK
- request:
    body: '{"message": "Which movie has the highest average rating?", "preamble":
      "## Task And Context\nYou use your advanced complex reasoning capabilities to
      help people by answering their questions and other requests interactively. You
      will be asked a very wide array of requests on all kinds of topics. You will
      be equipped with a wide range of search engines or similar tools to help you,
      which you use to research your answer. You may need to use multiple tools in
      parallel or sequentially to complete your task. You should focus on serving
      the user''s needs as best you can, which will be wide-ranging. The current date
      is Thursday, July 25, 2024 15:35:25\n\n## Style Guide\nUnless the user asks
      for a different style of answer, you should answer in full sentences, using
      proper grammar and spelling\n", "chat_history": [{"role": "User", "message":
      "The user uploaded the following attachments:\nFilename: tests/integration_tests/csv_agent/csv/movie_ratings.csv\nWord
      Count: 21\nPreview: movie,user,rating The Shawshank Redemption,John,8 The Shawshank
      Redemption,Jerry,6 The Shawshank Redemption,Jack,7 The Shawshank Redemption,Jeremy,8
      The user uploaded the following attachments:\nFilename: tests/integration_tests/csv_agent/csv/movie_bookings.csv\nWord
      Count: 21\nPreview: movie,name,num_tickets The Shawshank Redemption,John,2 The
      Shawshank Redemption,Jerry,2 The Shawshank Redemption,Jack,4 The Shawshank Redemption,Jeremy,2"}],
      "tools": [{"name": "file_read", "description": "Returns the textual contents
      of an uploaded file, broken up in text chunks", "parameter_definitions": {"filename":
      {"description": "The name of the attached file to read.", "type": "str", "required":
      true}}}, {"name": "file_peek", "description": "The name of the attached file
      to show a peek preview.", "parameter_definitions": {"filename": {"description":
      "The name of the attached file to show a peek preview.", "type": "str", "required":
      true}}}, {"name": "python_interpreter", "description": "Executes python code
      and returns the result. The code runs in a static sandbox without interactive
      mode, so print output or save output to a file.", "parameter_definitions": {"code":
      {"description": "Python code to execute.", "type": "str", "required": true}}}],
      "stream": true}'
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2252'
      content-type:
      - application/json
      host:
      - api.cohere.com
      user-agent:
      - python-httpx/0.27.0
      x-client-name:
      - langchain:partner
      x-fern-language:
      - Python
      x-fern-sdk-name:
      - cohere
      x-fern-sdk-version:
      - 5.5.8
    method: POST
    uri: https://api.cohere.com/v1/chat
  response:
    body:
      string: '{"is_finished":false,"event_type":"stream-start","generation_id":"99479a84-e3a0-4b6b-add3-ac5280424c67"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":"I"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" will"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" use"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" Python"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" to"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" read"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" the"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" data"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" and"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" find"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" the"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" movie"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" with"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" the"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" highest"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" average"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" rating"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":"."}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"name":"python_interpreter"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"{\n    \""}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"code"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\":"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        \""}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"import"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        pandas"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        as"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        pd"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\n"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\n"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"movie"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"ratings"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        ="}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        pd"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"."}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"read"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"csv"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"(''"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"tests"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"/"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"integration"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"tests"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"/"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"csv"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"agent"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"/"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"csv"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"/"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"movie"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"ratings"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"."}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"csv"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"'')"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\n"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\n"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"#"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        Group"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        by"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        movie"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        and"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        calculate"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        average"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        rating"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\nav"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"g"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"ratings"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        ="}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        movie"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"ratings"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"."}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"groupby"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"(''"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"movie"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"'')"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"[''"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"rating"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"'']."}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"mean"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"()"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\n"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\n"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"#"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        Find"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        the"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        movie"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        with"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        the"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        highest"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        average"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        rating"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\nh"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"igh"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"est"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"rated"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"movie"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        ="}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        avg"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"ratings"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"."}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"idx"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"max"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"()"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\n"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\n"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"print"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"("}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"f"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\\""}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"The"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        movie"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        with"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        the"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        highest"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        average"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        rating"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        is"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        {"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"highest"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"rated"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"movie"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"}"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        with"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        an"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        average"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        rating"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        of"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        {"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"avg"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"ratings"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"["}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"highest"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"rated"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"movie"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"]:"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"."}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"2"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"f"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"}\\\")"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\""}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\n"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"}"}}

        {"is_finished":false,"event_type":"tool-calls-generation","text":"I will use
        Python to read the data and find the movie with the highest average rating.","tool_calls":[{"name":"python_interpreter","parameters":{"code":"import
        pandas as pd\n\nmovie_ratings = pd.read_csv(''tests/integration_tests/csv_agent/csv/movie_ratings.csv'')\n\n#
        Group by movie and calculate average rating\navg_ratings = movie_ratings.groupby(''movie'')[''rating''].mean()\n\n#
        Find the movie with the highest average rating\nhighest_rated_movie = avg_ratings.idxmax()\n\nprint(f\"The
        movie with the highest average rating is {highest_rated_movie} with an average
        rating of {avg_ratings[highest_rated_movie]:.2f}\")"}}]}

        {"is_finished":true,"event_type":"stream-end","response":{"response_id":"6b098e71-e6dc-487b-9df0-b1555b764de5","text":"I
        will use Python to read the data and find the movie with the highest average
        rating.","generation_id":"99479a84-e3a0-4b6b-add3-ac5280424c67","chat_history":[{"role":"USER","message":"The
        user uploaded the following attachments:\nFilename: tests/integration_tests/csv_agent/csv/movie_ratings.csv\nWord
        Count: 21\nPreview: movie,user,rating The Shawshank Redemption,John,8 The
        Shawshank Redemption,Jerry,6 The Shawshank Redemption,Jack,7 The Shawshank
        Redemption,Jeremy,8 The user uploaded the following attachments:\nFilename:
        tests/integration_tests/csv_agent/csv/movie_bookings.csv\nWord Count: 21\nPreview:
        movie,name,num_tickets The Shawshank Redemption,John,2 The Shawshank Redemption,Jerry,2
        The Shawshank Redemption,Jack,4 The Shawshank Redemption,Jeremy,2"},{"role":"USER","message":"Which
        movie has the highest average rating?"},{"role":"CHATBOT","message":"I will
        use Python to read the data and find the movie with the highest average rating.","tool_calls":[{"name":"python_interpreter","parameters":{"code":"import
        pandas as pd\n\nmovie_ratings = pd.read_csv(''tests/integration_tests/csv_agent/csv/movie_ratings.csv'')\n\n#
        Group by movie and calculate average rating\navg_ratings = movie_ratings.groupby(''movie'')[''rating''].mean()\n\n#
        Find the movie with the highest average rating\nhighest_rated_movie = avg_ratings.idxmax()\n\nprint(f\"The
        movie with the highest average rating is {highest_rated_movie} with an average
        rating of {avg_ratings[highest_rated_movie]:.2f}\")"}}]}],"finish_reason":"COMPLETE","meta":{"api_version":{"version":"1"},"billed_units":{"input_tokens":412,"output_tokens":165},"tokens":{"input_tokens":1217,"output_tokens":199}},"tool_calls":[{"name":"python_interpreter","parameters":{"code":"import
        pandas as pd\n\nmovie_ratings = pd.read_csv(''tests/integration_tests/csv_agent/csv/movie_ratings.csv'')\n\n#
        Group by movie and calculate average rating\navg_ratings = movie_ratings.groupby(''movie'')[''rating''].mean()\n\n#
        Find the movie with the highest average rating\nhighest_rated_movie = avg_ratings.idxmax()\n\nprint(f\"The
        movie with the highest average rating is {highest_rated_movie} with an average
        rating of {avg_ratings[highest_rated_movie]:.2f}\")"}}]},"finish_reason":"COMPLETE"}

        '
    headers:
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 google
      access-control-expose-headers:
      - X-Debug-Trace-ID
      cache-control:
      - no-cache, no-store, no-transform, must-revalidate, private, max-age=0
      content-type:
      - application/stream+json
      date:
      - Thu, 25 Jul 2024 07:35:25 GMT
      expires:
      - Thu, 01 Jan 1970 00:00:00 UTC
      pragma:
      - no-cache
      server:
      - envoy
      vary:
      - Origin
      x-accel-expires:
      - '0'
      x-debug-trace-id:
      - cb6372efb8b43430eeac2852a51bb3cd
      x-endpoint-monthly-call-limit:
      - '1000'
      x-envoy-upstream-service-time:
      - '84'
      x-trial-endpoint-call-limit:
      - '40'
      x-trial-endpoint-call-remaining:
      - '37'
    status:
      code: 200
      message: OK
- request:
    body: '{"message": "", "preamble": "## Task And Context\nYou use your advanced
      complex reasoning capabilities to help people by answering their questions and
      other requests interactively. You will be asked a very wide array of requests
      on all kinds of topics. You will be equipped with a wide range of search engines
      or similar tools to help you, which you use to research your answer. You may
      need to use multiple tools in parallel or sequentially to complete your task.
      You should focus on serving the user''s needs as best you can, which will be
      wide-ranging. The current date is Thursday, July 25, 2024 15:35:25\n\n## Style
      Guide\nUnless the user asks for a different style of answer, you should answer
      in full sentences, using proper grammar and spelling\n", "chat_history": [{"role":
      "User", "message": "The user uploaded the following attachments:\nFilename:
      tests/integration_tests/csv_agent/csv/movie_ratings.csv\nWord Count: 21\nPreview:
      movie,user,rating The Shawshank Redemption,John,8 The Shawshank Redemption,Jerry,6
      The Shawshank Redemption,Jack,7 The Shawshank Redemption,Jeremy,8 The user uploaded
      the following attachments:\nFilename: tests/integration_tests/csv_agent/csv/movie_bookings.csv\nWord
      Count: 21\nPreview: movie,name,num_tickets The Shawshank Redemption,John,2 The
      Shawshank Redemption,Jerry,2 The Shawshank Redemption,Jack,4 The Shawshank Redemption,Jeremy,2"},
      {"role": "User", "message": "Which movie has the highest average rating?"},
      {"role": "Chatbot", "message": "I will use Python to read the data and find
      the movie with the highest average rating.", "tool_calls": [{"name": "python_interpreter",
      "args": {"code": "import pandas as pd\n\nmovie_ratings = pd.read_csv(''tests/integration_tests/csv_agent/csv/movie_ratings.csv'')\n\n#
      Group by movie and calculate average rating\navg_ratings = movie_ratings.groupby(''movie'')[''rating''].mean()\n\n#
      Find the movie with the highest average rating\nhighest_rated_movie = avg_ratings.idxmax()\n\nprint(f\"The
      movie with the highest average rating is {highest_rated_movie} with an average
      rating of {avg_ratings[highest_rated_movie]:.2f}\")"}, "id": "a2a800129e9245bc90d64b8ff6a45b7f",
      "type": "tool_call"}]}], "tools": [{"name": "file_read", "description": "Returns
      the textual contents of an uploaded file, broken up in text chunks", "parameter_definitions":
      {"filename": {"description": "The name of the attached file to read.", "type":
      "str", "required": true}}}, {"name": "file_peek", "description": "The name of
      the attached file to show a peek preview.", "parameter_definitions": {"filename":
      {"description": "The name of the attached file to show a peek preview.", "type":
      "str", "required": true}}}, {"name": "python_interpreter", "description": "Executes
      python code and returns the result. The code runs in a static sandbox without
      interactive mode, so print output or save output to a file.", "parameter_definitions":
      {"code": {"description": "Python code to execute.", "type": "str", "required":
      true}}}], "tool_results": [{"call": {"name": "python_interpreter", "parameters":
      {"code": "import pandas as pd\n\nmovie_ratings = pd.read_csv(''tests/integration_tests/csv_agent/csv/movie_ratings.csv'')\n\n#
      Group by movie and calculate average rating\navg_ratings = movie_ratings.groupby(''movie'')[''rating''].mean()\n\n#
      Find the movie with the highest average rating\nhighest_rated_movie = avg_ratings.idxmax()\n\nprint(f\"The
      movie with the highest average rating is {highest_rated_movie} with an average
      rating of {avg_ratings[highest_rated_movie]:.2f}\")"}}, "outputs": [{"output":
      "The movie with the highest average rating is The Shawshank Redemption with
      an average rating of 7.25\n"}]}], "stream": true}'
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3687'
      content-type:
      - application/json
      host:
      - api.cohere.com
      user-agent:
      - python-httpx/0.27.0
      x-client-name:
      - langchain:partner
      x-fern-language:
      - Python
      x-fern-sdk-name:
      - cohere
      x-fern-sdk-version:
      - 5.5.8
    method: POST
    uri: https://api.cohere.com/v1/chat
  response:
    body:
      string: '{"is_finished":false,"event_type":"stream-start","generation_id":"3eab743c-87fe-48d4-83a1-05c0bf30f965"}

        {"is_finished":false,"event_type":"search-results","documents":[{"id":"python_interpreter:0:3:0","output":"The
        movie with the highest average rating is The Shawshank Redemption with an
        average rating of 7.25\n","tool_name":"python_interpreter"}]}

        {"is_finished":false,"event_type":"text-generation","text":"The"}

        {"is_finished":false,"event_type":"text-generation","text":" movie"}

        {"is_finished":false,"event_type":"text-generation","text":" with"}

        {"is_finished":false,"event_type":"text-generation","text":" the"}

        {"is_finished":false,"event_type":"text-generation","text":" highest"}

        {"is_finished":false,"event_type":"text-generation","text":" average"}

        {"is_finished":false,"event_type":"text-generation","text":" rating"}

        {"is_finished":false,"event_type":"text-generation","text":" is"}

        {"is_finished":false,"event_type":"text-generation","text":" *"}

        {"is_finished":false,"event_type":"text-generation","text":"The"}

        {"is_finished":false,"event_type":"text-generation","text":" Shaw"}

        {"is_finished":false,"event_type":"text-generation","text":"shank"}

        {"is_finished":false,"event_type":"text-generation","text":" Redemption"}

        {"is_finished":false,"event_type":"text-generation","text":"*"}

        {"is_finished":false,"event_type":"text-generation","text":" with"}

        {"is_finished":false,"event_type":"text-generation","text":" an"}

        {"is_finished":false,"event_type":"text-generation","text":" average"}

        {"is_finished":false,"event_type":"text-generation","text":" rating"}

        {"is_finished":false,"event_type":"text-generation","text":" of"}

        {"is_finished":false,"event_type":"text-generation","text":" 7"}

        {"is_finished":false,"event_type":"text-generation","text":"."}

        {"is_finished":false,"event_type":"text-generation","text":"2"}

        {"is_finished":false,"event_type":"text-generation","text":"5"}

        {"is_finished":false,"event_type":"text-generation","text":"."}

        {"is_finished":false,"event_type":"citation-generation","citations":[{"start":46,"end":70,"text":"The
        Shawshank Redemption","document_ids":["python_interpreter:0:3:0"]}]}

        {"is_finished":false,"event_type":"citation-generation","citations":[{"start":98,"end":102,"text":"7.25","document_ids":["python_interpreter:0:3:0"]}]}

        {"is_finished":true,"event_type":"stream-end","response":{"response_id":"e9d8f67a-f0f2-46b0-81db-809971d6301b","text":"The
        movie with the highest average rating is *The Shawshank Redemption* with an
        average rating of 7.25.","generation_id":"3eab743c-87fe-48d4-83a1-05c0bf30f965","chat_history":[{"role":"USER","message":"The
        user uploaded the following attachments:\nFilename: tests/integration_tests/csv_agent/csv/movie_ratings.csv\nWord
        Count: 21\nPreview: movie,user,rating The Shawshank Redemption,John,8 The
        Shawshank Redemption,Jerry,6 The Shawshank Redemption,Jack,7 The Shawshank
        Redemption,Jeremy,8 The user uploaded the following attachments:\nFilename:
        tests/integration_tests/csv_agent/csv/movie_bookings.csv\nWord Count: 21\nPreview:
        movie,name,num_tickets The Shawshank Redemption,John,2 The Shawshank Redemption,Jerry,2
        The Shawshank Redemption,Jack,4 The Shawshank Redemption,Jeremy,2"},{"role":"USER","message":"Which
        movie has the highest average rating?"},{"role":"CHATBOT","message":"I will
        use Python to read the data and find the movie with the highest average rating.","tool_calls":[{"name":"python_interpreter","parameters":null}]},{"role":"TOOL","tool_results":[{"call":{"name":"python_interpreter","parameters":{"code":"import
        pandas as pd\n\nmovie_ratings = pd.read_csv(''tests/integration_tests/csv_agent/csv/movie_ratings.csv'')\n\n#
        Group by movie and calculate average rating\navg_ratings = movie_ratings.groupby(''movie'')[''rating''].mean()\n\n#
        Find the movie with the highest average rating\nhighest_rated_movie = avg_ratings.idxmax()\n\nprint(f\"The
        movie with the highest average rating is {highest_rated_movie} with an average
        rating of {avg_ratings[highest_rated_movie]:.2f}\")"}},"outputs":[{"output":"The
        movie with the highest average rating is The Shawshank Redemption with an
        average rating of 7.25\n"}]}]},{"role":"CHATBOT","message":"The movie with
        the highest average rating is *The Shawshank Redemption* with an average rating
        of 7.25."}],"finish_reason":"COMPLETE","meta":{"api_version":{"version":"1"},"billed_units":{"input_tokens":463,"output_tokens":25},"tokens":{"input_tokens":1468,"output_tokens":91}},"citations":[{"start":46,"end":70,"text":"The
        Shawshank Redemption","document_ids":["python_interpreter:0:3:0"]},{"start":98,"end":102,"text":"7.25","document_ids":["python_interpreter:0:3:0"]}],"documents":[{"id":"python_interpreter:0:3:0","output":"The
        movie with the highest average rating is The Shawshank Redemption with an
        average rating of 7.25\n","tool_name":"python_interpreter"}]},"finish_reason":"COMPLETE"}

        '
    headers:
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 google
      access-control-expose-headers:
      - X-Debug-Trace-ID
      cache-control:
      - no-cache, no-store, no-transform, must-revalidate, private, max-age=0
      content-type:
      - application/stream+json
      date:
      - Thu, 25 Jul 2024 07:35:30 GMT
      expires:
      - Thu, 01 Jan 1970 00:00:00 UTC
      pragma:
      - no-cache
      server:
      - envoy
      vary:
      - Origin
      x-accel-expires:
      - '0'
      x-debug-trace-id:
      - 2b477db370c0a0dfad26b8ce83020267
      x-endpoint-monthly-call-limit:
      - '1000'
      x-envoy-upstream-service-time:
      - '60'
      x-trial-endpoint-call-limit:
      - '40'
      x-trial-endpoint-call-remaining:
      - '36'
    status:
      code: 200
      message: OK
- request:
    body: '{"message": "who bought the most number of tickets to finding nemo?", "preamble":
      "## Task And Context\nYou use your advanced complex reasoning capabilities to
      help people by answering their questions and other requests interactively. You
      will be asked a very wide array of requests on all kinds of topics. You will
      be equipped with a wide range of search engines or similar tools to help you,
      which you use to research your answer. You may need to use multiple tools in
      parallel or sequentially to complete your task. You should focus on serving
      the user''s needs as best you can, which will be wide-ranging. The current date
      is Thursday, July 25, 2024 15:35:25\n\n## Style Guide\nUnless the user asks
      for a different style of answer, you should answer in full sentences, using
      proper grammar and spelling\n", "chat_history": [{"role": "User", "message":
      "The user uploaded the following attachments:\nFilename: tests/integration_tests/csv_agent/csv/movie_ratings.csv\nWord
      Count: 21\nPreview: movie,user,rating The Shawshank Redemption,John,8 The Shawshank
      Redemption,Jerry,6 The Shawshank Redemption,Jack,7 The Shawshank Redemption,Jeremy,8
      The user uploaded the following attachments:\nFilename: tests/integration_tests/csv_agent/csv/movie_bookings.csv\nWord
      Count: 21\nPreview: movie,name,num_tickets The Shawshank Redemption,John,2 The
      Shawshank Redemption,Jerry,2 The Shawshank Redemption,Jack,4 The Shawshank Redemption,Jeremy,2"}],
      "tools": [{"name": "file_read", "description": "Returns the textual contents
      of an uploaded file, broken up in text chunks", "parameter_definitions": {"filename":
      {"description": "The name of the attached file to read.", "type": "str", "required":
      true}}}, {"name": "file_peek", "description": "The name of the attached file
      to show a peek preview.", "parameter_definitions": {"filename": {"description":
      "The name of the attached file to show a peek preview.", "type": "str", "required":
      true}}}, {"name": "python_interpreter", "description": "Executes python code
      and returns the result. The code runs in a static sandbox without interactive
      mode, so print output or save output to a file.", "parameter_definitions": {"code":
      {"description": "Python code to execute.", "type": "str", "required": true}}}],
      "stream": true}'
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2263'
      content-type:
      - application/json
      host:
      - api.cohere.com
      user-agent:
      - python-httpx/0.27.0
      x-client-name:
      - langchain:partner
      x-fern-language:
      - Python
      x-fern-sdk-name:
      - cohere
      x-fern-sdk-version:
      - 5.5.8
    method: POST
    uri: https://api.cohere.com/v1/chat
  response:
    body:
      string: '{"is_finished":false,"event_type":"stream-start","generation_id":"b00ad359-4e4f-41f9-9d05-6b2ecb5a94e8"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":"I"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" will"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" use"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" Python"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" to"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" find"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" the"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":" answer"}

        {"is_finished":false,"event_type":"tool-calls-chunk","text":"."}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"name":"python_interpreter"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"{\n    \""}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"code"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\":"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        \""}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"import"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        pandas"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        as"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        pd"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\n"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\n"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"movie"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"book"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"ings"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        ="}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        pd"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"."}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"read"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"csv"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"(''"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"tests"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"/"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"integration"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"tests"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"/"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"csv"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"agent"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"/"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"csv"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"/"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"movie"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"book"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"ings"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"."}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"csv"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"'')"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\n"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\n"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"#"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        Filter"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        for"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        Finding"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        Nemo"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\n"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"finding"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"nem"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"o"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"book"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"ings"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        ="}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        movie"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"book"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"ings"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"["}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"movie"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"book"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"ings"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"[''"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"movie"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"'']"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        =="}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        ''"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"Finding"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        Nemo"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"'']"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\n"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\n"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"#"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        Group"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        by"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        name"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        and"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        sum"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        the"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        number"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        of"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        tickets"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\n"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"max"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"tickets"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"bought"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        ="}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        finding"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"nem"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"o"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"book"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"ings"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"."}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"groupby"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"(''"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"name"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"'')"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"[''"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"num"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"tickets"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"'']."}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"sum"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"()."}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"idx"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"max"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"()"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\n"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\\n"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"print"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"("}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"f"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"''"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"The"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        person"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        who"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        bought"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        the"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        most"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        tickets"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        to"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        Finding"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        Nemo"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        is"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"
        {"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"max"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"tickets"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"_"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"bought"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"}."}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"'')\""}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"\n"}}

        {"is_finished":false,"event_type":"tool-calls-chunk","tool_call_delta":{"index":0,"parameters":"}"}}

        {"is_finished":false,"event_type":"tool-calls-generation","text":"I will use
        Python to find the answer.","tool_calls":[{"name":"python_interpreter","parameters":{"code":"import
        pandas as pd\n\nmovie_bookings = pd.read_csv(''tests/integration_tests/csv_agent/csv/movie_bookings.csv'')\n\n#
        Filter for Finding Nemo\nfinding_nemo_bookings = movie_bookings[movie_bookings[''movie'']
        == ''Finding Nemo'']\n\n# Group by name and sum the number of tickets\nmax_tickets_bought
        = finding_nemo_bookings.groupby(''name'')[''num_tickets''].sum().idxmax()\n\nprint(f''The
        person who bought the most tickets to Finding Nemo is {max_tickets_bought}.'')"}}]}

        {"is_finished":true,"event_type":"stream-end","response":{"response_id":"94046a6a-ffcf-4924-a5d6-2b375fba38d8","text":"I
        will use Python to find the answer.","generation_id":"b00ad359-4e4f-41f9-9d05-6b2ecb5a94e8","chat_history":[{"role":"USER","message":"The
        user uploaded the following attachments:\nFilename: tests/integration_tests/csv_agent/csv/movie_ratings.csv\nWord
        Count: 21\nPreview: movie,user,rating The Shawshank Redemption,John,8 The
        Shawshank Redemption,Jerry,6 The Shawshank Redemption,Jack,7 The Shawshank
        Redemption,Jeremy,8 The user uploaded the following attachments:\nFilename:
        tests/integration_tests/csv_agent/csv/movie_bookings.csv\nWord Count: 21\nPreview:
        movie,name,num_tickets The Shawshank Redemption,John,2 The Shawshank Redemption,Jerry,2
        The Shawshank Redemption,Jack,4 The Shawshank Redemption,Jeremy,2"},{"role":"USER","message":"who
        bought the most number of tickets to finding nemo?"},{"role":"CHATBOT","message":"I
        will use Python to find the answer.","tool_calls":[{"name":"python_interpreter","parameters":{"code":"import
        pandas as pd\n\nmovie_bookings = pd.read_csv(''tests/integration_tests/csv_agent/csv/movie_bookings.csv'')\n\n#
        Filter for Finding Nemo\nfinding_nemo_bookings = movie_bookings[movie_bookings[''movie'']
        == ''Finding Nemo'']\n\n# Group by name and sum the number of tickets\nmax_tickets_bought
        = finding_nemo_bookings.groupby(''name'')[''num_tickets''].sum().idxmax()\n\nprint(f''The
        person who bought the most tickets to Finding Nemo is {max_tickets_bought}.'')"}}]}],"finish_reason":"COMPLETE","meta":{"api_version":{"version":"1"},"billed_units":{"input_tokens":416,"output_tokens":161},"tokens":{"input_tokens":1221,"output_tokens":194}},"tool_calls":[{"name":"python_interpreter","parameters":{"code":"import
        pandas as pd\n\nmovie_bookings = pd.read_csv(''tests/integration_tests/csv_agent/csv/movie_bookings.csv'')\n\n#
        Filter for Finding Nemo\nfinding_nemo_bookings = movie_bookings[movie_bookings[''movie'']
        == ''Finding Nemo'']\n\n# Group by name and sum the number of tickets\nmax_tickets_bought
        = finding_nemo_bookings.groupby(''name'')[''num_tickets''].sum().idxmax()\n\nprint(f''The
        person who bought the most tickets to Finding Nemo is {max_tickets_bought}.'')"}}]},"finish_reason":"COMPLETE"}

        '
    headers:
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 google
      access-control-expose-headers:
      - X-Debug-Trace-ID
      cache-control:
      - no-cache, no-store, no-transform, must-revalidate, private, max-age=0
      content-type:
      - application/stream+json
      date:
      - Thu, 25 Jul 2024 07:35:35 GMT
      expires:
      - Thu, 01 Jan 1970 00:00:00 UTC
      pragma:
      - no-cache
      server:
      - envoy
      vary:
      - Origin
      x-accel-expires:
      - '0'
      x-debug-trace-id:
      - 38e56fdc3e09be70e25f0edf5b8d9222
      x-endpoint-monthly-call-limit:
      - '1000'
      x-envoy-upstream-service-time:
      - '82'
      x-trial-endpoint-call-limit:
      - '40'
      x-trial-endpoint-call-remaining:
      - '35'
    status:
      code: 200
      message: OK
- request:
    body: '{"message": "", "preamble": "## Task And Context\nYou use your advanced
      complex reasoning capabilities to help people by answering their questions and
      other requests interactively. You will be asked a very wide array of requests
      on all kinds of topics. You will be equipped with a wide range of search engines
      or similar tools to help you, which you use to research your answer. You may
      need to use multiple tools in parallel or sequentially to complete your task.
      You should focus on serving the user''s needs as best you can, which will be
      wide-ranging. The current date is Thursday, July 25, 2024 15:35:25\n\n## Style
      Guide\nUnless the user asks for a different style of answer, you should answer
      in full sentences, using proper grammar and spelling\n", "chat_history": [{"role":
      "User", "message": "The user uploaded the following attachments:\nFilename:
      tests/integration_tests/csv_agent/csv/movie_ratings.csv\nWord Count: 21\nPreview:
      movie,user,rating The Shawshank Redemption,John,8 The Shawshank Redemption,Jerry,6
      The Shawshank Redemption,Jack,7 The Shawshank Redemption,Jeremy,8 The user uploaded
      the following attachments:\nFilename: tests/integration_tests/csv_agent/csv/movie_bookings.csv\nWord
      Count: 21\nPreview: movie,name,num_tickets The Shawshank Redemption,John,2 The
      Shawshank Redemption,Jerry,2 The Shawshank Redemption,Jack,4 The Shawshank Redemption,Jeremy,2"},
      {"role": "User", "message": "who bought the most number of tickets to finding
      nemo?"}, {"role": "Chatbot", "message": "I will use Python to find the answer.",
      "tool_calls": [{"name": "python_interpreter", "args": {"code": "import pandas
      as pd\n\nmovie_bookings = pd.read_csv(''tests/integration_tests/csv_agent/csv/movie_bookings.csv'')\n\n#
      Filter for Finding Nemo\nfinding_nemo_bookings = movie_bookings[movie_bookings[''movie'']
      == ''Finding Nemo'']\n\n# Group by name and sum the number of tickets\nmax_tickets_bought
      = finding_nemo_bookings.groupby(''name'')[''num_tickets''].sum().idxmax()\n\nprint(f''The
      person who bought the most tickets to Finding Nemo is {max_tickets_bought}.'')"},
      "id": "89fc686877d04412b86730723f49de57", "type": "tool_call"}]}], "tools":
      [{"name": "file_read", "description": "Returns the textual contents of an uploaded
      file, broken up in text chunks", "parameter_definitions": {"filename": {"description":
      "The name of the attached file to read.", "type": "str", "required": true}}},
      {"name": "file_peek", "description": "The name of the attached file to show
      a peek preview.", "parameter_definitions": {"filename": {"description": "The
      name of the attached file to show a peek preview.", "type": "str", "required":
      true}}}, {"name": "python_interpreter", "description": "Executes python code
      and returns the result. The code runs in a static sandbox without interactive
      mode, so print output or save output to a file.", "parameter_definitions": {"code":
      {"description": "Python code to execute.", "type": "str", "required": true}}}],
      "tool_results": [{"call": {"name": "python_interpreter", "parameters": {"code":
      "import pandas as pd\n\nmovie_bookings = pd.read_csv(''tests/integration_tests/csv_agent/csv/movie_bookings.csv'')\n\n#
      Filter for Finding Nemo\nfinding_nemo_bookings = movie_bookings[movie_bookings[''movie'']
      == ''Finding Nemo'']\n\n# Group by name and sum the number of tickets\nmax_tickets_bought
      = finding_nemo_bookings.groupby(''name'')[''num_tickets''].sum().idxmax()\n\nprint(f''The
      person who bought the most tickets to Finding Nemo is {max_tickets_bought}.'')"}},
      "outputs": [{"output": "The person who bought the most tickets to Finding Nemo
      is Penelope.\n"}]}], "stream": true}'
    headers:
      accept:
      - '*/*'
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3598'
      content-type:
      - application/json
      host:
      - api.cohere.com
      user-agent:
      - python-httpx/0.27.0
      x-client-name:
      - langchain:partner
      x-fern-language:
      - Python
      x-fern-sdk-name:
      - cohere
      x-fern-sdk-version:
      - 5.5.8
    method: POST
    uri: https://api.cohere.com/v1/chat
  response:
    body:
      string: '{"is_finished":false,"event_type":"stream-start","generation_id":"e9eb1e09-b457-401c-8a03-c56e5110dc72"}

        {"is_finished":false,"event_type":"search-results","documents":[{"id":"python_interpreter:0:3:0","output":"The
        person who bought the most tickets to Finding Nemo is Penelope.\n","tool_name":"python_interpreter"}]}

        {"is_finished":false,"event_type":"text-generation","text":"Penelope"}

        {"is_finished":false,"event_type":"text-generation","text":" bought"}

        {"is_finished":false,"event_type":"text-generation","text":" the"}

        {"is_finished":false,"event_type":"text-generation","text":" most"}

        {"is_finished":false,"event_type":"text-generation","text":" tickets"}

        {"is_finished":false,"event_type":"text-generation","text":" to"}

        {"is_finished":false,"event_type":"text-generation","text":" Finding"}

        {"is_finished":false,"event_type":"text-generation","text":" Nemo"}

        {"is_finished":false,"event_type":"text-generation","text":"."}

        {"is_finished":false,"event_type":"citation-generation","citations":[{"start":0,"end":8,"text":"Penelope","document_ids":["python_interpreter:0:3:0"]}]}

        {"is_finished":true,"event_type":"stream-end","response":{"response_id":"4c8769bb-35a3-4819-bf34-6b060b501276","text":"Penelope
        bought the most tickets to Finding Nemo.","generation_id":"e9eb1e09-b457-401c-8a03-c56e5110dc72","chat_history":[{"role":"USER","message":"The
        user uploaded the following attachments:\nFilename: tests/integration_tests/csv_agent/csv/movie_ratings.csv\nWord
        Count: 21\nPreview: movie,user,rating The Shawshank Redemption,John,8 The
        Shawshank Redemption,Jerry,6 The Shawshank Redemption,Jack,7 The Shawshank
        Redemption,Jeremy,8 The user uploaded the following attachments:\nFilename:
        tests/integration_tests/csv_agent/csv/movie_bookings.csv\nWord Count: 21\nPreview:
        movie,name,num_tickets The Shawshank Redemption,John,2 The Shawshank Redemption,Jerry,2
        The Shawshank Redemption,Jack,4 The Shawshank Redemption,Jeremy,2"},{"role":"USER","message":"who
        bought the most number of tickets to finding nemo?"},{"role":"CHATBOT","message":"I
        will use Python to find the answer.","tool_calls":[{"name":"python_interpreter","parameters":null}]},{"role":"TOOL","tool_results":[{"call":{"name":"python_interpreter","parameters":{"code":"import
        pandas as pd\n\nmovie_bookings = pd.read_csv(''tests/integration_tests/csv_agent/csv/movie_bookings.csv'')\n\n#
        Filter for Finding Nemo\nfinding_nemo_bookings = movie_bookings[movie_bookings[''movie'']
        == ''Finding Nemo'']\n\n# Group by name and sum the number of tickets\nmax_tickets_bought
        = finding_nemo_bookings.groupby(''name'')[''num_tickets''].sum().idxmax()\n\nprint(f''The
        person who bought the most tickets to Finding Nemo is {max_tickets_bought}.'')"}},"outputs":[{"output":"The
        person who bought the most tickets to Finding Nemo is Penelope.\n"}]}]},{"role":"CHATBOT","message":"Penelope
        bought the most tickets to Finding Nemo."}],"finish_reason":"COMPLETE","meta":{"api_version":{"version":"1"},"billed_units":{"input_tokens":449,"output_tokens":10},"tokens":{"input_tokens":1458,"output_tokens":52}},"citations":[{"start":0,"end":8,"text":"Penelope","document_ids":["python_interpreter:0:3:0"]}],"documents":[{"id":"python_interpreter:0:3:0","output":"The
        person who bought the most tickets to Finding Nemo is Penelope.\n","tool_name":"python_interpreter"}]},"finish_reason":"COMPLETE"}

        '
    headers:
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 google
      access-control-expose-headers:
      - X-Debug-Trace-ID
      cache-control:
      - no-cache, no-store, no-transform, must-revalidate, private, max-age=0
      content-type:
      - application/stream+json
      date:
      - Thu, 25 Jul 2024 07:35:45 GMT
      expires:
      - Thu, 01 Jan 1970 00:00:00 UTC
      pragma:
      - no-cache
      server:
      - envoy
      vary:
      - Origin
      x-accel-expires:
      - '0'
      x-debug-trace-id:
      - d835ac6da94442dbfde8d366921c1336
      x-endpoint-monthly-call-limit:
      - '1000'
      x-envoy-upstream-service-time:
      - '72'
      x-trial-endpoint-call-limit:
      - '40'
      x-trial-endpoint-call-remaining:
      - '34'
    status:
      code: 200
      message: OK
version: 1
